// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Others 1`] = `undefined`;

exports[`Others 2`] = `
[
  Variable {
    "blockNames": [
      "test",
    ],
    "blockType": "variable",
    "name": "test",
  },
  Variable {
    "blockNames": [
      "test2",
    ],
    "blockType": "variable",
    "name": "test2",
  },
  Data {
    "blockNames": [
      "aws_vpc",
      "test",
    ],
    "blockType": "data",
    "name": "test",
    "type": "aws_vpc",
  },
  Module {
    "blockNames": [
      "test",
    ],
    "blockType": "module",
    "name": "test",
  },
  Resource {
    "blockNames": [
      "aws_vpc",
      "test",
    ],
    "blockType": "resource",
    "name": "test",
    "type": "aws_vpc",
  },
  Data {
    "blockNames": [
      "aws_vpc",
      "test",
    ],
    "blockType": "data",
    "name": "test",
    "type": "aws_vpc",
  },
  Data {
    "blockNames": [
      "aws_vpc",
      "test2",
    ],
    "blockType": "data",
    "name": "test2",
    "type": "aws_vpc",
  },
  Resource {
    "blockNames": [
      "innerBlock",
      "innerBlock",
    ],
    "blockType": "resource",
    "name": "innerBlock",
    "type": "innerBlock",
  },
  Locals {
    "blockNames": [],
    "blockType": "locals",
  },
  Resource {
    "blockNames": [
      "locals",
      "locals",
    ],
    "blockType": "resource",
    "name": "locals",
    "type": "locals",
  },
  Import {
    "blockNames": [],
    "blockType": "import",
  },
  Resource {
    "blockNames": [
      "tags",
      "tags",
    ],
    "blockType": "resource",
    "name": "tags",
    "type": "tags",
  },
  Comment {
    "blockNames": [],
    "blockType": "comment",
    "comment": "comment",
  },
  Comment {
    "blockNames": [],
    "blockType": "comment",
    "comment": "
    line1
    line2
    line3
    line4
  ",
  },
  Moved {
    "blockNames": [],
    "blockType": "moved",
  },
  Removed {
    "blockNames": [],
    "blockType": "removed",
  },
  Resource {
    "blockNames": [
      "tfg2",
      "tfg2",
    ],
    "blockType": "resource",
    "name": "tfg2",
    "type": "tfg2",
  },
]
`;

exports[`Others 3`] = `
{
  "test2": "test",
}
`;

exports[`Others 4`] = `
{
  "tf": "variable "test"{
type = string
}

variable "test2"{
type = string
}

data "aws_vpc" "test"{
cidr_block = "test"
}

module "test"{
source = "./test"
}

resource "aws_vpc" "test"{
cidr_block = "test"
tags = {
a = "a"
}
}

data "aws_vpc" "test"{
filter {
name = "tag:a"
values = [
"a"
]
}
cidr_block = "test"
}

data "aws_vpc" "test2"{
filter {
name = "tag:a"
values = [
"a"
]
}
cidr_block = "test"
}

resource "innerBlock" "innerBlock"{
a = "a"
provisioner "local-exec"{
command = "echo hello"
}
provisioner "local-exec"{
command = "echo world"
}
}

locals{
a = "a"
b = 123
c = aws_vpc.test.x
}

resource "locals" "locals"{
a = local.a
}

import{
to = innerBlock.innerBlock
id = "id"
provider = arg
}

resource "tags" "tags"{
tags = {
a = "a"
b = "b c d"
}
}

# comment

# line1
# line2
# line3
# line4

moved{
from = resource.a
to = innerBlock.innerBlock
}

removed{
from = resource.b
lifecycle {
destroy = false
}
}

resource "tfg2" "tfg2"{
tfg2 = "tfg2"
}

",
  "tfvars": "test2 = "test"

",
}
`;

exports[`Others 5`] = `
"terraform {
required_version = "= 0.12"
backend "s3"{
bucket = "mybucket"
key = "path/to/my/key"
region = "ap-southeast-1"
}

}

provider "aws"{
region = "ap-southeast-1"
profile = "test"
}

resource "aws_vpc" "vpc"{
cidr_block = "172.88.0.0/16"
tags = {
name = "vpc-test-dev"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "public0"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.100.0/24"
availability_zone = "ap-southeast-1a"
tags = {
name = "subnet-test-dev-public0"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "public1"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.101.0/24"
availability_zone = "ap-southeast-1b"
tags = {
name = "subnet-test-dev-public1"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "public2"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.102.0/24"
availability_zone = "ap-southeast-1c"
tags = {
name = "subnet-test-dev-public2"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "web0"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.104.0/24"
availability_zone = "ap-southeast-1a"
tags = {
name = "subnet-test-dev-web0"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "web1"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.105.0/24"
availability_zone = "ap-southeast-1b"
tags = {
name = "subnet-test-dev-web1"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "web2"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.106.0/24"
availability_zone = "ap-southeast-1c"
tags = {
name = "subnet-test-dev-web2"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "app0"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.108.0/24"
availability_zone = "ap-southeast-1a"
tags = {
name = "subnet-test-dev-app0"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "app1"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.109.0/24"
availability_zone = "ap-southeast-1b"
tags = {
name = "subnet-test-dev-app1"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "app2"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.110.0/24"
availability_zone = "ap-southeast-1c"
tags = {
name = "subnet-test-dev-app2"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "gut0"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.112.0/24"
availability_zone = "ap-southeast-1a"
tags = {
name = "subnet-test-dev-gut0"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "gut1"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.113.0/24"
availability_zone = "ap-southeast-1b"
tags = {
name = "subnet-test-dev-gut1"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "gut2"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.114.0/24"
availability_zone = "ap-southeast-1c"
tags = {
name = "subnet-test-dev-gut2"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "db0"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.116.0/24"
availability_zone = "ap-southeast-1a"
tags = {
name = "subnet-test-dev-db0"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "db1"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.117.0/24"
availability_zone = "ap-southeast-1b"
tags = {
name = "subnet-test-dev-db1"
project = "test"
env = "dev"
}
}

resource "aws_subnet" "db2"{
vpc_id = aws_vpc.vpc.id
cidr_block = "172.88.118.0/24"
availability_zone = "ap-southeast-1c"
tags = {
name = "subnet-test-dev-db2"
project = "test"
env = "dev"
}
}

resource "aws_internet_gateway" "igw"{
vpc_id = aws_vpc.vpc.id
tags = {
name = "igw-test-dev"
project = "test"
env = "dev"
}
}

resource "aws_route_table" "default"{
vpc_id = aws_vpc.vpc.id
tags = {
name = "rt-test-dev-default"
project = "test"
env = "dev"
}
}

resource "aws_route_table" "igw"{
vpc_id = aws_vpc.vpc.id
route {
cidr_block = "0.0.0.0/0"
gateway_id = aws_internet_gateway.igw.id
}
tags = {
name = "rt-test-dev-igw"
project = "test"
env = "dev"
}
}

resource "aws_route_table_association" "default-web0"{
subnet_id = aws_subnet.web0.id
route_table_id = aws_route_table.default.id
}

resource "aws_route_table_association" "default-web1"{
subnet_id = aws_subnet.web1.id
route_table_id = aws_route_table.default.id
}

resource "aws_route_table_association" "default-web2"{
subnet_id = aws_subnet.web2.id
route_table_id = aws_route_table.default.id
}

resource "aws_route_table_association" "default-app0"{
subnet_id = aws_subnet.app0.id
route_table_id = aws_route_table.default.id
}

resource "aws_route_table_association" "default-app1"{
subnet_id = aws_subnet.app1.id
route_table_id = aws_route_table.default.id
}

resource "aws_route_table_association" "default-app2"{
subnet_id = aws_subnet.app2.id
route_table_id = aws_route_table.default.id
}

resource "aws_route_table_association" "default-gut0"{
subnet_id = aws_subnet.gut0.id
route_table_id = aws_route_table.default.id
}

resource "aws_route_table_association" "default-gut1"{
subnet_id = aws_subnet.gut1.id
route_table_id = aws_route_table.default.id
}

resource "aws_route_table_association" "default-gut2"{
subnet_id = aws_subnet.gut2.id
route_table_id = aws_route_table.default.id
}

resource "aws_route_table_association" "default-db0"{
subnet_id = aws_subnet.db0.id
route_table_id = aws_route_table.default.id
}

resource "aws_route_table_association" "default-db1"{
subnet_id = aws_subnet.db1.id
route_table_id = aws_route_table.default.id
}

resource "aws_route_table_association" "default-db2"{
subnet_id = aws_subnet.db2.id
route_table_id = aws_route_table.default.id
}

resource "aws_route_table_association" "igw-public0"{
subnet_id = aws_subnet.public0.id
route_table_id = aws_route_table.igw.id
}

resource "aws_route_table_association" "igw-public1"{
subnet_id = aws_subnet.public1.id
route_table_id = aws_route_table.igw.id
}

resource "aws_route_table_association" "igw-public2"{
subnet_id = aws_subnet.public2.id
route_table_id = aws_route_table.igw.id
}

resource "aws_network_acl" "default"{
vpc_id = aws_vpc.vpc.id
subnet_ids = [
aws_subnet.public0.id,
aws_subnet.public1.id,
aws_subnet.public2.id,
aws_subnet.web0.id,
aws_subnet.web1.id,
aws_subnet.web2.id,
aws_subnet.app0.id,
aws_subnet.app1.id,
aws_subnet.app2.id,
aws_subnet.gut0.id,
aws_subnet.gut1.id,
aws_subnet.gut2.id
]
ingress {
protocol = "all"
rule_no = 100
action = "allow"
cidr_block = "0.0.0.0/0"
from_port = 0
to_port = 0
}
egress {
protocol = "all"
rule_no = 100
action = "allow"
cidr_block = "0.0.0.0/0"
from_port = 0
to_port = 0
}
tags = {
name = "nacl-test-dev-default"
project = "test"
env = "dev"
}
}

resource "aws_network_acl" "db"{
vpc_id = aws_vpc.vpc.id
subnet_ids = [
aws_subnet.db0.id,
aws_subnet.db1.id,
aws_subnet.db2.id
]
ingress {
protocol = "all"
rule_no = 100
action = "allow"
cidr_block = "172.88.108.0/22"
from_port = 0
to_port = 0
}
ingress {
protocol = "all"
rule_no = 110
action = "allow"
cidr_block = "172.88.116.0/22"
from_port = 0
to_port = 0
}
egress {
protocol = "all"
rule_no = 100
action = "allow"
cidr_block = "172.88.108.0/22"
from_port = 0
to_port = 0
}
egress {
protocol = "all"
rule_no = 110
action = "allow"
cidr_block = "172.88.116.0/22"
from_port = 0
to_port = 0
}
tags = {
name = "nacl-test-dev-db"
project = "test"
env = "dev"
}
}

resource "aws_security_group" "public-default"{
name = "fw-public-default"
description = "Default for public tier"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = "tcp"
from_port = 22
to_port = 22
cidr_blocks = [
"172.88.100.0/22"
]
description = "SSH for tier"
}
egress {
protocol = "-1"
from_port = 0
to_port = 0
cidr_blocks = [
"0.0.0.0/0"
]
}
tags = {
name = "sg-test-dev-public-default"
project = "test"
env = "dev"
}
}

resource "aws_security_group" "web-default"{
name = "fw-web-default"
description = "Default for web tier"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = "tcp"
from_port = 22
to_port = 22
cidr_blocks = [
"172.88.104.0/22"
]
description = "SSH for tier"
}
egress {
protocol = "-1"
from_port = 0
to_port = 0
cidr_blocks = [
"0.0.0.0/0"
]
}
tags = {
name = "sg-test-dev-web-default"
project = "test"
env = "dev"
}
}

resource "aws_security_group" "app-default"{
name = "fw-app-default"
description = "Default for app tier"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = "tcp"
from_port = 22
to_port = 22
cidr_blocks = [
"172.88.108.0/22"
]
description = "SSH for tier"
}
egress {
protocol = "-1"
from_port = 0
to_port = 0
cidr_blocks = [
"0.0.0.0/0"
]
}
tags = {
name = "sg-test-dev-app-default"
project = "test"
env = "dev"
}
}

resource "aws_security_group" "gut-default"{
name = "fw-gut-default"
description = "Default for gut tier"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = "tcp"
from_port = 22
to_port = 22
cidr_blocks = [
"172.88.112.0/22"
]
description = "SSH for tier"
}
egress {
protocol = "-1"
from_port = 0
to_port = 0
cidr_blocks = [
"0.0.0.0/0"
]
}
tags = {
name = "sg-test-dev-gut-default"
project = "test"
env = "dev"
}
}

resource "aws_security_group" "db-default"{
name = "fw-db-default"
description = "Default for db tier"
vpc_id = aws_vpc.vpc.id
ingress {
protocol = "tcp"
from_port = 22
to_port = 22
cidr_blocks = [
"172.88.116.0/22"
]
description = "SSH for tier"
}
egress {
protocol = "-1"
from_port = 0
to_port = 0
cidr_blocks = [
"0.0.0.0/0"
]
}
tags = {
name = "sg-test-dev-db-default"
project = "test"
env = "dev"
}
}

resource "aws_eip" "nat"{
vpc = true
tags = {
name = "eip-test-dev-nat"
project = "test"
env = "dev"
}
}

resource "aws_nat_gateway" "nat"{
allocation_id = aws_eip.nat.id
subnet_id = aws_subnet.public0.id
tags = {
name = "nat-test-dev"
project = "test"
env = "dev"
}
}

resource "aws_route_table" "nat"{
vpc_id = aws_vpc.vpc.id
route {
cidr_block = "0.0.0.0/0"
gateway_id = aws_nat_gateway.nat.id
}
tags = {
name = "rt-test-dev-nat"
project = "test"
env = "dev"
}
}

resource "aws_route_table_association" "nat-gut0"{
subnet_id = aws_subnet.gut0.id
route_table_id = aws_route_table.nat.id
}

resource "aws_route_table_association" "nat-gut1"{
subnet_id = aws_subnet.gut1.id
route_table_id = aws_route_table.nat.id
}

resource "aws_route_table_association" "nat-gut2"{
subnet_id = aws_subnet.gut2.id
route_table_id = aws_route_table.nat.id
}

output "vpc"{
value = {
cidr = aws_vpc.vpc.cidr_block
}
}

output "subnets"{
value = {
publicSubnets = [
aws_subnet.public0.cidr_block,
aws_subnet.public1.cidr_block,
aws_subnet.public2.cidr_block
]
webSubnets = [
aws_subnet.web0.cidr_block,
aws_subnet.web1.cidr_block,
aws_subnet.web2.cidr_block
]
appSubnets = [
aws_subnet.app0.cidr_block,
aws_subnet.app1.cidr_block,
aws_subnet.app2.cidr_block
]
gutSubnets = [
aws_subnet.gut0.cidr_block,
aws_subnet.gut1.cidr_block,
aws_subnet.gut2.cidr_block
]
dbSubnets = [
aws_subnet.db0.cidr_block,
aws_subnet.db1.cidr_block,
aws_subnet.db2.cidr_block
]
}
}

"
`;

exports[`Others 6`] = `
"test2 = "test"

"
`;
